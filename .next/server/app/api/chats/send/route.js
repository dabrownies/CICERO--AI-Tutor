"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/chats/send/route";
exports.ids = ["app/api/chats/send/route"];
exports.modules = {

/***/ "firebase-admin":
/*!*********************************!*\
  !*** external "firebase-admin" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("firebase-admin");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:stream");

/***/ }),

/***/ "node:stream/web":
/*!**********************************!*\
  !*** external "node:stream/web" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("node:stream/web");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchats%2Fsend%2Froute&page=%2Fapi%2Fchats%2Fsend%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchats%2Fsend%2Froute.js&appDir=%2FUsers%2Fceo%2FDesktop%2Fhackathon_2024%2Fai-tutor%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fceo%2FDesktop%2Fhackathon_2024%2Fai-tutor&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchats%2Fsend%2Froute&page=%2Fapi%2Fchats%2Fsend%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchats%2Fsend%2Froute.js&appDir=%2FUsers%2Fceo%2FDesktop%2Fhackathon_2024%2Fai-tutor%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fceo%2FDesktop%2Fhackathon_2024%2Fai-tutor&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_ceo_Desktop_hackathon_2024_ai_tutor_app_api_chats_send_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/chats/send/route.js */ \"(rsc)/./app/api/chats/send/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/chats/send/route\",\n        pathname: \"/api/chats/send\",\n        filename: \"route\",\n        bundlePath: \"app/api/chats/send/route\"\n    },\n    resolvedPagePath: \"/Users/ceo/Desktop/hackathon_2024/ai-tutor/app/api/chats/send/route.js\",\n    nextConfigOutput,\n    userland: _Users_ceo_Desktop_hackathon_2024_ai_tutor_app_api_chats_send_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/chats/send/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjaGF0cyUyRnNlbmQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmNoYXRzJTJGc2VuZCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmNoYXRzJTJGc2VuZCUyRnJvdXRlLmpzJmFwcERpcj0lMkZVc2VycyUyRmNlbyUyRkRlc2t0b3AlMkZoYWNrYXRob25fMjAyNCUyRmFpLXR1dG9yJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRmNlbyUyRkRlc2t0b3AlMkZoYWNrYXRob25fMjAyNCUyRmFpLXR1dG9yJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNzQjtBQUNuRztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL2FpX3R1dG9yLz8zOWQ4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9jZW8vRGVza3RvcC9oYWNrYXRob25fMjAyNC9haS10dXRvci9hcHAvYXBpL2NoYXRzL3NlbmQvcm91dGUuanNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2NoYXRzL3NlbmQvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9jaGF0cy9zZW5kXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9jaGF0cy9zZW5kL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL2Nlby9EZXNrdG9wL2hhY2thdGhvbl8yMDI0L2FpLXR1dG9yL2FwcC9hcGkvY2hhdHMvc2VuZC9yb3V0ZS5qc1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvY2hhdHMvc2VuZC9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchats%2Fsend%2Froute&page=%2Fapi%2Fchats%2Fsend%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchats%2Fsend%2Froute.js&appDir=%2FUsers%2Fceo%2FDesktop%2Fhackathon_2024%2Fai-tutor%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fceo%2FDesktop%2Fhackathon_2024%2Fai-tutor&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/chats/send/route.js":
/*!*************************************!*\
  !*** ./app/api/chats/send/route.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var _firebaseAdmin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/firebaseAdmin */ \"(rsc)/./firebaseAdmin.js\");\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _app_pinecone_operations_pinecone_retrieve__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/app/pinecone_operations/pinecone_retrieve */ \"(rsc)/./app/pinecone_operations/pinecone_retrieve.js\");\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! openai */ \"(rsc)/./node_modules/openai/index.mjs\");\n\n\n\n\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n    apiKey: process.env.OPENAI_API_KEY\n});\nconst systemPrompt = `Your role is to act as a friendly and highly effective AI tutor, with two primary functions: delivering outstanding communication and providing exceptional teaching on the selected subject. Follow these guidelines:\nSubject-Specific Expertise: focus exclusively on the subject that the content given to you specifies. All responses, examples, and interactions should remain aligned with this topic, ensuring no deviation from the user's chosen focus.\nExceptional Teaching Skills: Your priority is to ensure the user fully understands the material being discussed. Use clear and engaging explanations and:\nAsk follow-up questions to test the user's understanding of the topic in real-time.\nIf the user consistently answers incorrectly, strongly encourage them to practice more with you until they show signs of comprehension before moving forward.\nIf the user insists on proceeding despite lack of understanding, suggest they return to previous material, but proceed with the new lesson if they remain persistent.\nSimplified Explanations: If the user repeatedly expresses difficulty understanding a concept:\nOffer a simpler explanation.\nIf needed, provide a \"5-year-old\" level explanation to ensure the user grasps the basics.`;\nasync function POST(req) {\n    try {\n        const { message, workspaceTitle } = await req.json();\n        const authHeader = req.headers.get(\"authorization\");\n        const token = authHeader && authHeader.startsWith(\"Bearer \") ? authHeader.split(\" \")[1] : null;\n        if (!token) {\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n                error: \"You need to be logged in to send messages\"\n            }, {\n                status: 401\n            });\n        }\n        // Verify the token\n        const decodedToken = await _firebaseAdmin__WEBPACK_IMPORTED_MODULE_0__.auth.verifyIdToken(token);\n        const userId = decodedToken.uid;\n        // Get workspace snapshot\n        const workspaceSnapshot = await _firebaseAdmin__WEBPACK_IMPORTED_MODULE_0__.db.collection(\"users\").doc(userId).collection(\"workspaces\").where(\"title\", \"==\", workspaceTitle).limit(1).get();\n        if (workspaceSnapshot.empty) {\n            return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n                error: \"Workspace not found\"\n            }, {\n                status: 404\n            });\n        }\n        // Get the workspace id that we're in\n        const workspaceId = workspaceSnapshot.docs[0].id;\n        //Refernce to the single conversaton docmnet\n        const conversationRef = _firebaseAdmin__WEBPACK_IMPORTED_MODULE_0__.db.collection(\"users\").doc(userId).collection(\"workspaces\").doc(workspaceId).collection(\"conversations\").doc(\"chat\");\n        //Get the current conversation or create it if it does not exist\n        const conversationDoc = await conversationRef.get();\n        let messages = [];\n        if (conversationDoc.exists) {\n            messages = conversationDoc.data().messages || [];\n        }\n        //Add new user message\n        const newUserMessage = {\n            role: \"user\",\n            content: message,\n            timestamp: Date.now()\n        };\n        messages.push(newUserMessage);\n        //Update the conversation document\n        await conversationRef.set({\n            messages\n        }, {\n            merge: true\n        });\n        //Query Pinecone for top results as a string\n        const pineconeResults = await (0,_app_pinecone_operations_pinecone_retrieve__WEBPACK_IMPORTED_MODULE_2__.queryPinecone)(message, userId, workspaceId);\n        //Prepare messages for OpenAI\n        const openaiMessages = [\n            {\n                role: \"system\",\n                content: systemPrompt\n            },\n            ...messages.map((m)=>({\n                    role: m.role,\n                    content: m.content\n                })),\n            {\n                role: \"system\",\n                content: `Relevant information: ${pineconeResults}`\n            }\n        ];\n        // Generate AI response\n        const completion = await openai.chat.completions.create({\n            messages: openaiMessages,\n            model: \"gpt-4\",\n            stream: true\n        });\n        const stream = new ReadableStream({\n            async start (controller) {\n                const encoder = new TextEncoder();\n                let aiResponse = \"\";\n                try {\n                    for await (const chunk of completion){\n                        const content = chunk.choices[0]?.delta?.content || \"\";\n                        aiResponse += content;\n                        controller.enqueue(encoder.encode(content));\n                    }\n                } catch (error) {\n                    console.error(\"AI Error:\", error);\n                    controller.error(error);\n                } finally{\n                    // Save AI response to conversation collection\n                    const newAiMessage = {\n                        role: \"system\",\n                        content: aiResponse,\n                        timestamp: Date.now()\n                    };\n                    messages.push(newAiMessage);\n                    //Update the conversation document with the new message\n                    await conversationRef.set({\n                        messages\n                    }, {\n                        merge: true\n                    });\n                    controller.close();\n                }\n            }\n        });\n        return new next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse(stream);\n    } catch (e) {\n        console.error(\"API Error:\", e);\n        return next_server__WEBPACK_IMPORTED_MODULE_1__.NextResponse.json({\n            error: \"An error occurred while processing your request\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/chats/send/route.js\n");

/***/ }),

/***/ "(rsc)/./app/pinecone_operations/pinecone_retrieve.js":
/*!******************************************************!*\
  !*** ./app/pinecone_operations/pinecone_retrieve.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   queryPinecone: () => (/* binding */ queryPinecone)\n/* harmony export */ });\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dotenv */ \"(rsc)/./node_modules/dotenv/lib/main.js\");\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! openai */ \"(rsc)/./node_modules/openai/index.mjs\");\n/* harmony import */ var _pinecone_database_pinecone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @pinecone-database/pinecone */ \"(rsc)/./node_modules/@pinecone-database/pinecone/dist/index.js\");\n/*\n  Name: pinecone_retrieve.js\n  Modules: queryPinecone \n  Description: Program accepts a query (list of strings) from caller program.\n  Searches pinecone database for most similar vectors and returns result as array of objects.\n*/ // Required modules\n\n\n\ndotenv__WEBPACK_IMPORTED_MODULE_0__.config();\n// Initialize OpenAI configuration\nconst openaiClient = new openai__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n    // For now put in apikey directly.\n    apiKey: process.env.OPENAI_API_KEY\n});\n// Initialize Pinecone\nconst pinecone = new _pinecone_database_pinecone__WEBPACK_IMPORTED_MODULE_1__.Pinecone({\n    // For now hardcode apiKey.\n    apiKey: process.env.PINECONE_API_KEY\n});\n// Set index name for pinecone.\nconst indexName = \"ai-tutor-index\";\n/**\n * @param {string} query - The search query string.\n * @returns {Array<number>} - An array of numbers representing the embedding vector. \n *  query can be list of strings or just string.\n * Passes query to ada to generate embedding for use in queryPinecone.\n * Structure is typical along with some error handling.\n*/ // I write this same function but in python in upload program. Maybe we should implement as seperate program.\nasync function generateEmbedding(query) {\n    try {\n        const response = await openaiClient.embeddings.create({\n            model: \"text-embedding-ada-002\",\n            input: [\n                query\n            ]\n        });\n        return response.data[0].embedding;\n    // Should implement better error handling and logging here.\n    } catch (error) {\n        console.error(\"Error generating embedding:\", error);\n        return null;\n    }\n}\n/** \n * Queries Pinecone for vectors matching the given query embedding.\n * @param {string} query - The search query string.\n * @param {string} userId - The user ID for filtering results.\n * @param {string} workspaceId - The workspace ID for filtering results.\n * @param {number} topK - Number of top results to return (default is 10).\n * @returns {response.matches} - An array of matching vectors from Pinecone.\n */ // I may want to implement an optional sourceId in the future.\nasync function queryPinecone(query, userId, workspaceId, topK = 10) {\n    // Generate query embedding\n    const queryEmbedding = await generateEmbedding(query);\n    // Should implement better error handling and logging here.\n    if (!queryEmbedding) {\n        console.error(\"Embedding generation failed.\");\n        return \" \";\n    }\n    // Query Pinecone index with filters. Requests metadata.\n    try {\n        const index = pinecone.Index(indexName);\n        const response = await index.query({\n            vector: queryEmbedding,\n            topK: topK,\n            includeMetadata: true,\n            filter: {\n                user_id: userId,\n                workspace_id: workspaceId\n            }\n        });\n        // Return results in string format.\n        const formattedResults = response.matches.map((entry)=>`Text: ${entry.metadata.text}\\nSource Info: ${entry.metadata.source_info}\\nAnnotations: ${entry.metadata.annotations}\\nTags: ${entry.metadata.tags}`).join(\"\\n\\n\");\n        return formattedResults;\n    } catch (error) {\n        console.error(\"Error querying Pinecone:\", error);\n        return \" \";\n    }\n}\n// Export the function for external usage.\n // Test function to verify Pinecone query functionality\n // DELETE LATER.\n /*async function testPineconeRetrieve() {\n  const user_id = 'test_user';\n  const workspace_id = 'test_workspace';\n  const query = 'Julius Cesear';\n\n  try {\n    const pineconeResponse = await queryPinecone(query, user_id, workspace_id);\n    console.log('Raw Pinecone Response:', pineconeResponse);\n\n    pineconeResponse.forEach((entry, index) => {\n      console.log(`Result ${index + 1}:`);\n      console.log('Text:', entry.metadata.text);\n      console.log('Source Info:', entry.metadata.source_info);\n      console.log('Annotations:', entry.metadata.annotations);\n      console.log('Tags:', entry.metadata.tags);\n    });\n\n    const combinedString = pineconeResponse.map(entry =>\n      `${entry.metadata.text}\\nSource Info: ${entry.metadata.source_info}\\nAnnotations: ${entry.metadata.annotations}\\nTags: ${entry.metadata.tags}`\n    ).join('\\n\\n');\n\n    console.log('Combined String:', combinedString);\n  } catch (error) {\n    console.error('An error occurred while retrieving data from Pinecone:', error);\n  }\n}\n\n// Run the test\ntestPineconeRetrieve();\n*/  /*\n  Code works\n  Future plans:\n  Better error handling and logging.\n  Let users use their own keys.\n  Refractor code for modality. \n    Embedding should be done in seprate program and shared with upload.\n    Pinecone initilization should be done in seperate program and shared with upload.\n    Initilize pinecone once at start of app and reuse same connection to improve performance.\n  Keep a cache of embeddings in memory for similar queries -> \n    can match query string in memory to forgo embedding and query\n    can match embeddings in memory to forgo pinecone query\n  Handle queries in batches for when multiple users are using same pinecone connection.\n  Handle cases when pinecone returns no result or results that are too different from query.\n*/ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvcGluZWNvbmVfb3BlcmF0aW9ucy9waW5lY29uZV9yZXRyaWV2ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7O0FBS0EsR0FDQSxtQkFBbUI7QUFDUztBQUNBO0FBQzJCO0FBRXZEQSwwQ0FBYTtBQUdiLGtDQUFrQztBQUNsQyxNQUFNSSxlQUFlLElBQUlILDhDQUFNQSxDQUFDO0lBQzlCLGtDQUFrQztJQUNsQ0ksUUFBUUMsUUFBUUMsR0FBRyxDQUFDQyxjQUFjO0FBRXBDO0FBRUEsc0JBQXNCO0FBQ3RCLE1BQU1DLFdBQVcsSUFBSVAsaUVBQVFBLENBQUM7SUFDNUIsMkJBQTJCO0lBQzNCRyxRQUFRQyxRQUFRQyxHQUFHLENBQUNHLGdCQUFnQjtBQUV0QztBQUVBLCtCQUErQjtBQUMvQixNQUFNQyxZQUFZO0FBRWxCOzs7Ozs7QUFNQSxHQUNBLDZHQUE2RztBQUM3RyxlQUFlQyxrQkFBa0JDLEtBQUs7SUFDcEMsSUFBSTtRQUNGLE1BQU1DLFdBQVcsTUFBTVYsYUFBYVcsVUFBVSxDQUFDQyxNQUFNLENBQUM7WUFDcERDLE9BQU87WUFDUEMsT0FBTztnQkFBQ0w7YUFBTTtRQUNoQjtRQUNBLE9BQU9DLFNBQVNLLElBQUksQ0FBQyxFQUFFLENBQUNDLFNBQVM7SUFFakMsMkRBQTJEO0lBQzdELEVBQUUsT0FBT0MsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsK0JBQStCQTtRQUM3QyxPQUFPO0lBQ1Q7QUFDRjtBQUdBOzs7Ozs7O0NBT0MsR0FDRCw4REFBOEQ7QUFDOUQsZUFBZUUsY0FBY1YsS0FBSyxFQUFFVyxNQUFNLEVBQUVDLFdBQVcsRUFBRUMsT0FBTyxFQUFFO0lBQ2hFLDJCQUEyQjtJQUMzQixNQUFNQyxpQkFBaUIsTUFBTWYsa0JBQWtCQztJQUUvQywyREFBMkQ7SUFDM0QsSUFBSSxDQUFDYyxnQkFBZ0I7UUFDbkJMLFFBQVFELEtBQUssQ0FBQztRQUNkLE9BQU87SUFDVDtJQUVBLHdEQUF3RDtJQUN4RCxJQUFJO1FBQ0YsTUFBTU8sUUFBUW5CLFNBQVNvQixLQUFLLENBQUNsQjtRQUM3QixNQUFNRyxXQUFXLE1BQU1jLE1BQU1mLEtBQUssQ0FBQztZQUNqQ2lCLFFBQVFIO1lBQ1JELE1BQU1BO1lBQ05LLGlCQUFpQjtZQUNqQkMsUUFBUTtnQkFDTkMsU0FBU1Q7Z0JBQ1RVLGNBQWNUO1lBQ2hCO1FBQ0Y7UUFFQSxtQ0FBbUM7UUFDbkMsTUFBTVUsbUJBQW1CckIsU0FBU3NCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxDQUFBQSxRQUM1QyxDQUFDLE1BQU0sRUFBRUEsTUFBTUMsUUFBUSxDQUFDQyxJQUFJLENBQUMsZUFBZSxFQUFFRixNQUFNQyxRQUFRLENBQUNFLFdBQVcsQ0FBQyxlQUFlLEVBQUVILE1BQU1DLFFBQVEsQ0FBQ0csV0FBVyxDQUFDLFFBQVEsRUFBRUosTUFBTUMsUUFBUSxDQUFDSSxJQUFJLENBQUMsQ0FBQyxFQUNwSkMsSUFBSSxDQUFDO1FBQ1AsT0FBT1Q7SUFFVCxFQUFFLE9BQU9kLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLDRCQUE0QkE7UUFDMUMsT0FBTztJQUNUO0FBQ0Y7QUFFQSwwQ0FBMEM7QUFDakIsQ0FFekIsdURBQXVEO0NBQ3ZELGdCQUFnQjtDQUNoQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE2QkEsSUFFQTs7Ozs7Ozs7Ozs7Ozs7QUFjQSIsInNvdXJjZXMiOlsid2VicGFjazovL2FpX3R1dG9yLy4vYXBwL3BpbmVjb25lX29wZXJhdGlvbnMvcGluZWNvbmVfcmV0cmlldmUuanM/ZDY1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICBOYW1lOiBwaW5lY29uZV9yZXRyaWV2ZS5qc1xuICBNb2R1bGVzOiBxdWVyeVBpbmVjb25lIFxuICBEZXNjcmlwdGlvbjogUHJvZ3JhbSBhY2NlcHRzIGEgcXVlcnkgKGxpc3Qgb2Ygc3RyaW5ncykgZnJvbSBjYWxsZXIgcHJvZ3JhbS5cbiAgU2VhcmNoZXMgcGluZWNvbmUgZGF0YWJhc2UgZm9yIG1vc3Qgc2ltaWxhciB2ZWN0b3JzIGFuZCByZXR1cm5zIHJlc3VsdCBhcyBhcnJheSBvZiBvYmplY3RzLlxuKi8gXG4vLyBSZXF1aXJlZCBtb2R1bGVzXG5pbXBvcnQgZG90ZW52IGZyb20gJ2RvdGVudic7XG5pbXBvcnQgT3BlbkFJIGZyb20gJ29wZW5haSc7XG5pbXBvcnQgeyBQaW5lY29uZSB9IGZyb20gJ0BwaW5lY29uZS1kYXRhYmFzZS9waW5lY29uZSc7XG5cbmRvdGVudi5jb25maWcoKTtcblxuXG4vLyBJbml0aWFsaXplIE9wZW5BSSBjb25maWd1cmF0aW9uXG5jb25zdCBvcGVuYWlDbGllbnQgPSBuZXcgT3BlbkFJKHtcbiAgLy8gRm9yIG5vdyBwdXQgaW4gYXBpa2V5IGRpcmVjdGx5LlxuICBhcGlLZXk6IHByb2Nlc3MuZW52Lk9QRU5BSV9BUElfS0VZXG4gIC8vIGFwaUtleTogXCJcIlxufSk7XG5cbi8vIEluaXRpYWxpemUgUGluZWNvbmVcbmNvbnN0IHBpbmVjb25lID0gbmV3IFBpbmVjb25lKHtcbiAgLy8gRm9yIG5vdyBoYXJkY29kZSBhcGlLZXkuXG4gIGFwaUtleTogcHJvY2Vzcy5lbnYuUElORUNPTkVfQVBJX0tFWVxuICAvLyBhcGlLZXk6IFwiXCJcbn0pO1xuXG4vLyBTZXQgaW5kZXggbmFtZSBmb3IgcGluZWNvbmUuXG5jb25zdCBpbmRleE5hbWUgPSBcImFpLXR1dG9yLWluZGV4XCI7XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHF1ZXJ5IC0gVGhlIHNlYXJjaCBxdWVyeSBzdHJpbmcuXG4gKiBAcmV0dXJucyB7QXJyYXk8bnVtYmVyPn0gLSBBbiBhcnJheSBvZiBudW1iZXJzIHJlcHJlc2VudGluZyB0aGUgZW1iZWRkaW5nIHZlY3Rvci4gXG4gKiAgcXVlcnkgY2FuIGJlIGxpc3Qgb2Ygc3RyaW5ncyBvciBqdXN0IHN0cmluZy5cbiAqIFBhc3NlcyBxdWVyeSB0byBhZGEgdG8gZ2VuZXJhdGUgZW1iZWRkaW5nIGZvciB1c2UgaW4gcXVlcnlQaW5lY29uZS5cbiAqIFN0cnVjdHVyZSBpcyB0eXBpY2FsIGFsb25nIHdpdGggc29tZSBlcnJvciBoYW5kbGluZy5cbiovXG4vLyBJIHdyaXRlIHRoaXMgc2FtZSBmdW5jdGlvbiBidXQgaW4gcHl0aG9uIGluIHVwbG9hZCBwcm9ncmFtLiBNYXliZSB3ZSBzaG91bGQgaW1wbGVtZW50IGFzIHNlcGVyYXRlIHByb2dyYW0uXG5hc3luYyBmdW5jdGlvbiBnZW5lcmF0ZUVtYmVkZGluZyhxdWVyeSkge1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgb3BlbmFpQ2xpZW50LmVtYmVkZGluZ3MuY3JlYXRlKHtcbiAgICAgIG1vZGVsOiBcInRleHQtZW1iZWRkaW5nLWFkYS0wMDJcIixcbiAgICAgIGlucHV0OiBbcXVlcnldXG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3BvbnNlLmRhdGFbMF0uZW1iZWRkaW5nO1xuXG4gICAgLy8gU2hvdWxkIGltcGxlbWVudCBiZXR0ZXIgZXJyb3IgaGFuZGxpbmcgYW5kIGxvZ2dpbmcgaGVyZS5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZ2VuZXJhdGluZyBlbWJlZGRpbmc6XCIsIGVycm9yKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuXG5cbi8qKiBcbiAqIFF1ZXJpZXMgUGluZWNvbmUgZm9yIHZlY3RvcnMgbWF0Y2hpbmcgdGhlIGdpdmVuIHF1ZXJ5IGVtYmVkZGluZy5cbiAqIEBwYXJhbSB7c3RyaW5nfSBxdWVyeSAtIFRoZSBzZWFyY2ggcXVlcnkgc3RyaW5nLlxuICogQHBhcmFtIHtzdHJpbmd9IHVzZXJJZCAtIFRoZSB1c2VyIElEIGZvciBmaWx0ZXJpbmcgcmVzdWx0cy5cbiAqIEBwYXJhbSB7c3RyaW5nfSB3b3Jrc3BhY2VJZCAtIFRoZSB3b3Jrc3BhY2UgSUQgZm9yIGZpbHRlcmluZyByZXN1bHRzLlxuICogQHBhcmFtIHtudW1iZXJ9IHRvcEsgLSBOdW1iZXIgb2YgdG9wIHJlc3VsdHMgdG8gcmV0dXJuIChkZWZhdWx0IGlzIDEwKS5cbiAqIEByZXR1cm5zIHtyZXNwb25zZS5tYXRjaGVzfSAtIEFuIGFycmF5IG9mIG1hdGNoaW5nIHZlY3RvcnMgZnJvbSBQaW5lY29uZS5cbiAqL1xuLy8gSSBtYXkgd2FudCB0byBpbXBsZW1lbnQgYW4gb3B0aW9uYWwgc291cmNlSWQgaW4gdGhlIGZ1dHVyZS5cbmFzeW5jIGZ1bmN0aW9uIHF1ZXJ5UGluZWNvbmUocXVlcnksIHVzZXJJZCwgd29ya3NwYWNlSWQsIHRvcEsgPSAxMCkge1xuICAvLyBHZW5lcmF0ZSBxdWVyeSBlbWJlZGRpbmdcbiAgY29uc3QgcXVlcnlFbWJlZGRpbmcgPSBhd2FpdCBnZW5lcmF0ZUVtYmVkZGluZyhxdWVyeSk7XG5cbiAgLy8gU2hvdWxkIGltcGxlbWVudCBiZXR0ZXIgZXJyb3IgaGFuZGxpbmcgYW5kIGxvZ2dpbmcgaGVyZS5cbiAgaWYgKCFxdWVyeUVtYmVkZGluZykge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFbWJlZGRpbmcgZ2VuZXJhdGlvbiBmYWlsZWQuXCIpO1xuICAgIHJldHVybiAnICc7XG4gIH1cblxuICAvLyBRdWVyeSBQaW5lY29uZSBpbmRleCB3aXRoIGZpbHRlcnMuIFJlcXVlc3RzIG1ldGFkYXRhLlxuICB0cnkge1xuICAgIGNvbnN0IGluZGV4ID0gcGluZWNvbmUuSW5kZXgoaW5kZXhOYW1lKTtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGluZGV4LnF1ZXJ5KHtcbiAgICAgIHZlY3RvcjogcXVlcnlFbWJlZGRpbmcsXG4gICAgICB0b3BLOiB0b3BLLFxuICAgICAgaW5jbHVkZU1ldGFkYXRhOiB0cnVlLFxuICAgICAgZmlsdGVyOiB7XG4gICAgICAgIHVzZXJfaWQ6IHVzZXJJZCxcbiAgICAgICAgd29ya3NwYWNlX2lkOiB3b3Jrc3BhY2VJZFxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gUmV0dXJuIHJlc3VsdHMgaW4gc3RyaW5nIGZvcm1hdC5cbiAgICBjb25zdCBmb3JtYXR0ZWRSZXN1bHRzID0gcmVzcG9uc2UubWF0Y2hlcy5tYXAoZW50cnkgPT4gXG4gICAgICBgVGV4dDogJHtlbnRyeS5tZXRhZGF0YS50ZXh0fVxcblNvdXJjZSBJbmZvOiAke2VudHJ5Lm1ldGFkYXRhLnNvdXJjZV9pbmZvfVxcbkFubm90YXRpb25zOiAke2VudHJ5Lm1ldGFkYXRhLmFubm90YXRpb25zfVxcblRhZ3M6ICR7ZW50cnkubWV0YWRhdGEudGFnc31gXG4gICAgKS5qb2luKCdcXG5cXG4nKTsgXG4gICAgcmV0dXJuIGZvcm1hdHRlZFJlc3VsdHM7XG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgcXVlcnlpbmcgUGluZWNvbmU6XCIsIGVycm9yKTtcbiAgICByZXR1cm4gJyAnO1xuICB9XG59XG5cbi8vIEV4cG9ydCB0aGUgZnVuY3Rpb24gZm9yIGV4dGVybmFsIHVzYWdlLlxuZXhwb3J0IHsgcXVlcnlQaW5lY29uZSB9O1xuXG4vLyBUZXN0IGZ1bmN0aW9uIHRvIHZlcmlmeSBQaW5lY29uZSBxdWVyeSBmdW5jdGlvbmFsaXR5XG4vLyBERUxFVEUgTEFURVIuXG4vKmFzeW5jIGZ1bmN0aW9uIHRlc3RQaW5lY29uZVJldHJpZXZlKCkge1xuICBjb25zdCB1c2VyX2lkID0gJ3Rlc3RfdXNlcic7XG4gIGNvbnN0IHdvcmtzcGFjZV9pZCA9ICd0ZXN0X3dvcmtzcGFjZSc7XG4gIGNvbnN0IHF1ZXJ5ID0gJ0p1bGl1cyBDZXNlYXInO1xuXG4gIHRyeSB7XG4gICAgY29uc3QgcGluZWNvbmVSZXNwb25zZSA9IGF3YWl0IHF1ZXJ5UGluZWNvbmUocXVlcnksIHVzZXJfaWQsIHdvcmtzcGFjZV9pZCk7XG4gICAgY29uc29sZS5sb2coJ1JhdyBQaW5lY29uZSBSZXNwb25zZTonLCBwaW5lY29uZVJlc3BvbnNlKTtcblxuICAgIHBpbmVjb25lUmVzcG9uc2UuZm9yRWFjaCgoZW50cnksIGluZGV4KSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhgUmVzdWx0ICR7aW5kZXggKyAxfTpgKTtcbiAgICAgIGNvbnNvbGUubG9nKCdUZXh0OicsIGVudHJ5Lm1ldGFkYXRhLnRleHQpO1xuICAgICAgY29uc29sZS5sb2coJ1NvdXJjZSBJbmZvOicsIGVudHJ5Lm1ldGFkYXRhLnNvdXJjZV9pbmZvKTtcbiAgICAgIGNvbnNvbGUubG9nKCdBbm5vdGF0aW9uczonLCBlbnRyeS5tZXRhZGF0YS5hbm5vdGF0aW9ucyk7XG4gICAgICBjb25zb2xlLmxvZygnVGFnczonLCBlbnRyeS5tZXRhZGF0YS50YWdzKTtcbiAgICB9KTtcblxuICAgIGNvbnN0IGNvbWJpbmVkU3RyaW5nID0gcGluZWNvbmVSZXNwb25zZS5tYXAoZW50cnkgPT5cbiAgICAgIGAke2VudHJ5Lm1ldGFkYXRhLnRleHR9XFxuU291cmNlIEluZm86ICR7ZW50cnkubWV0YWRhdGEuc291cmNlX2luZm99XFxuQW5ub3RhdGlvbnM6ICR7ZW50cnkubWV0YWRhdGEuYW5ub3RhdGlvbnN9XFxuVGFnczogJHtlbnRyeS5tZXRhZGF0YS50YWdzfWBcbiAgICApLmpvaW4oJ1xcblxcbicpO1xuXG4gICAgY29uc29sZS5sb2coJ0NvbWJpbmVkIFN0cmluZzonLCBjb21iaW5lZFN0cmluZyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignQW4gZXJyb3Igb2NjdXJyZWQgd2hpbGUgcmV0cmlldmluZyBkYXRhIGZyb20gUGluZWNvbmU6JywgZXJyb3IpO1xuICB9XG59XG5cbi8vIFJ1biB0aGUgdGVzdFxudGVzdFBpbmVjb25lUmV0cmlldmUoKTtcbiovXG5cbi8qXG4gIENvZGUgd29ya3NcbiAgRnV0dXJlIHBsYW5zOlxuICBCZXR0ZXIgZXJyb3IgaGFuZGxpbmcgYW5kIGxvZ2dpbmcuXG4gIExldCB1c2VycyB1c2UgdGhlaXIgb3duIGtleXMuXG4gIFJlZnJhY3RvciBjb2RlIGZvciBtb2RhbGl0eS4gXG4gICAgRW1iZWRkaW5nIHNob3VsZCBiZSBkb25lIGluIHNlcHJhdGUgcHJvZ3JhbSBhbmQgc2hhcmVkIHdpdGggdXBsb2FkLlxuICAgIFBpbmVjb25lIGluaXRpbGl6YXRpb24gc2hvdWxkIGJlIGRvbmUgaW4gc2VwZXJhdGUgcHJvZ3JhbSBhbmQgc2hhcmVkIHdpdGggdXBsb2FkLlxuICAgIEluaXRpbGl6ZSBwaW5lY29uZSBvbmNlIGF0IHN0YXJ0IG9mIGFwcCBhbmQgcmV1c2Ugc2FtZSBjb25uZWN0aW9uIHRvIGltcHJvdmUgcGVyZm9ybWFuY2UuXG4gIEtlZXAgYSBjYWNoZSBvZiBlbWJlZGRpbmdzIGluIG1lbW9yeSBmb3Igc2ltaWxhciBxdWVyaWVzIC0+IFxuICAgIGNhbiBtYXRjaCBxdWVyeSBzdHJpbmcgaW4gbWVtb3J5IHRvIGZvcmdvIGVtYmVkZGluZyBhbmQgcXVlcnlcbiAgICBjYW4gbWF0Y2ggZW1iZWRkaW5ncyBpbiBtZW1vcnkgdG8gZm9yZ28gcGluZWNvbmUgcXVlcnlcbiAgSGFuZGxlIHF1ZXJpZXMgaW4gYmF0Y2hlcyBmb3Igd2hlbiBtdWx0aXBsZSB1c2VycyBhcmUgdXNpbmcgc2FtZSBwaW5lY29uZSBjb25uZWN0aW9uLlxuICBIYW5kbGUgY2FzZXMgd2hlbiBwaW5lY29uZSByZXR1cm5zIG5vIHJlc3VsdCBvciByZXN1bHRzIHRoYXQgYXJlIHRvbyBkaWZmZXJlbnQgZnJvbSBxdWVyeS5cbiovIl0sIm5hbWVzIjpbImRvdGVudiIsIk9wZW5BSSIsIlBpbmVjb25lIiwiY29uZmlnIiwib3BlbmFpQ2xpZW50IiwiYXBpS2V5IiwicHJvY2VzcyIsImVudiIsIk9QRU5BSV9BUElfS0VZIiwicGluZWNvbmUiLCJQSU5FQ09ORV9BUElfS0VZIiwiaW5kZXhOYW1lIiwiZ2VuZXJhdGVFbWJlZGRpbmciLCJxdWVyeSIsInJlc3BvbnNlIiwiZW1iZWRkaW5ncyIsImNyZWF0ZSIsIm1vZGVsIiwiaW5wdXQiLCJkYXRhIiwiZW1iZWRkaW5nIiwiZXJyb3IiLCJjb25zb2xlIiwicXVlcnlQaW5lY29uZSIsInVzZXJJZCIsIndvcmtzcGFjZUlkIiwidG9wSyIsInF1ZXJ5RW1iZWRkaW5nIiwiaW5kZXgiLCJJbmRleCIsInZlY3RvciIsImluY2x1ZGVNZXRhZGF0YSIsImZpbHRlciIsInVzZXJfaWQiLCJ3b3Jrc3BhY2VfaWQiLCJmb3JtYXR0ZWRSZXN1bHRzIiwibWF0Y2hlcyIsIm1hcCIsImVudHJ5IiwibWV0YWRhdGEiLCJ0ZXh0Iiwic291cmNlX2luZm8iLCJhbm5vdGF0aW9ucyIsInRhZ3MiLCJqb2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/pinecone_operations/pinecone_retrieve.js\n");

/***/ }),

/***/ "(rsc)/./firebaseAdmin.js":
/*!**************************!*\
  !*** ./firebaseAdmin.js ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   admin: () => (/* reexport default export from named module */ firebase_admin__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   db: () => (/* binding */ db)\n/* harmony export */ });\n/* harmony import */ var firebase_admin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase-admin */ \"firebase-admin\");\n\nif (!firebase_admin__WEBPACK_IMPORTED_MODULE_0__.apps.length) {\n    firebase_admin__WEBPACK_IMPORTED_MODULE_0__.initializeApp({\n        credential: firebase_admin__WEBPACK_IMPORTED_MODULE_0__.credential.cert({\n            projectId: process.env.FIREBASE_PROJECT_ID,\n            clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\n            privateKey: process.env.FIREBASE_PRIVATE_KEY.replace(/\\\\n/g, \"\\n\")\n        }),\n        databaseURL: process.env.FIREBASE_DATABASE_URL\n    });\n}\nconst db = firebase_admin__WEBPACK_IMPORTED_MODULE_0__.firestore();\nconst auth = firebase_admin__WEBPACK_IMPORTED_MODULE_0__.auth();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9maXJlYmFzZUFkbWluLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBbUM7QUFFbkMsSUFBSSxDQUFDQSxnREFBVSxDQUFDRSxNQUFNLEVBQUU7SUFDdEJGLHlEQUFtQixDQUFDO1FBQ2xCSSxZQUFZSixzREFBZ0IsQ0FBQ0ssSUFBSSxDQUFDO1lBQ2hDQyxXQUFXQyxRQUFRQyxHQUFHLENBQUNDLG1CQUFtQjtZQUMxQ0MsYUFBYUgsUUFBUUMsR0FBRyxDQUFDRyxxQkFBcUI7WUFDOUNDLFlBQVlMLFFBQVFDLEdBQUcsQ0FBQ0ssb0JBQW9CLENBQUNDLE9BQU8sQ0FBQyxRQUFRO1FBQy9EO1FBQ0FDLGFBQWFSLFFBQVFDLEdBQUcsQ0FBQ1EscUJBQXFCO0lBQ2hEO0FBQ0Y7QUFFQSxNQUFNQyxLQUFLakIscURBQWU7QUFDMUIsTUFBTW1CLE9BQU9uQixnREFBVTtBQUVFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWlfdHV0b3IvLi9maXJlYmFzZUFkbWluLmpzPzE0ZTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFkbWluIGZyb20gJ2ZpcmViYXNlLWFkbWluJztcblxuaWYgKCFhZG1pbi5hcHBzLmxlbmd0aCkge1xuICBhZG1pbi5pbml0aWFsaXplQXBwKHtcbiAgICBjcmVkZW50aWFsOiBhZG1pbi5jcmVkZW50aWFsLmNlcnQoe1xuICAgICAgcHJvamVjdElkOiBwcm9jZXNzLmVudi5GSVJFQkFTRV9QUk9KRUNUX0lELFxuICAgICAgY2xpZW50RW1haWw6IHByb2Nlc3MuZW52LkZJUkVCQVNFX0NMSUVOVF9FTUFJTCxcbiAgICAgIHByaXZhdGVLZXk6IHByb2Nlc3MuZW52LkZJUkVCQVNFX1BSSVZBVEVfS0VZLnJlcGxhY2UoL1xcXFxuL2csICdcXG4nKSxcbiAgICB9KSxcbiAgICBkYXRhYmFzZVVSTDogcHJvY2Vzcy5lbnYuRklSRUJBU0VfREFUQUJBU0VfVVJMLFxuICB9KTtcbn1cblxuY29uc3QgZGIgPSBhZG1pbi5maXJlc3RvcmUoKTtcbmNvbnN0IGF1dGggPSBhZG1pbi5hdXRoKCk7XG5cbmV4cG9ydCB7YWRtaW4sIGRiLCBhdXRofTsiXSwibmFtZXMiOlsiYWRtaW4iLCJhcHBzIiwibGVuZ3RoIiwiaW5pdGlhbGl6ZUFwcCIsImNyZWRlbnRpYWwiLCJjZXJ0IiwicHJvamVjdElkIiwicHJvY2VzcyIsImVudiIsIkZJUkVCQVNFX1BST0pFQ1RfSUQiLCJjbGllbnRFbWFpbCIsIkZJUkVCQVNFX0NMSUVOVF9FTUFJTCIsInByaXZhdGVLZXkiLCJGSVJFQkFTRV9QUklWQVRFX0tFWSIsInJlcGxhY2UiLCJkYXRhYmFzZVVSTCIsIkZJUkVCQVNFX0RBVEFCQVNFX1VSTCIsImRiIiwiZmlyZXN0b3JlIiwiYXV0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./firebaseAdmin.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@opentelemetry","vendor-chunks/formdata-node","vendor-chunks/@pinecone-database","vendor-chunks/openai","vendor-chunks/form-data-encoder","vendor-chunks/whatwg-url","vendor-chunks/agentkeepalive","vendor-chunks/tr46","vendor-chunks/dotenv","vendor-chunks/webidl-conversions","vendor-chunks/ms","vendor-chunks/humanize-ms","vendor-chunks/event-target-shim","vendor-chunks/abort-controller"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchats%2Fsend%2Froute&page=%2Fapi%2Fchats%2Fsend%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchats%2Fsend%2Froute.js&appDir=%2FUsers%2Fceo%2FDesktop%2Fhackathon_2024%2Fai-tutor%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fceo%2FDesktop%2Fhackathon_2024%2Fai-tutor&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();