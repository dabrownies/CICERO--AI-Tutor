"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/mainScreen/chatbox/page",{

/***/ "(app-pages-browser)/./app/openaiTutor.js":
/*!****************************!*\
  !*** ./app/openaiTutor.js ***!
  \****************************/
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dotenv */ \"(app-pages-browser)/./node_modules/dotenv/lib/main.js\");\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! openai */ \"(app-pages-browser)/./node_modules/openai/index.mjs\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n// Import environment variables from .env file\n\ndotenv__WEBPACK_IMPORTED_MODULE_0__.config({\n    path: \"../.env\"\n});\n/*\n Name: openaiTutor.js\n Description: This program sets up an OpenAI client.\n Can be used by passing in systemMessage, content, and query as string arguments.\n Returns OpenAI's answer.\n Uses OpenAI key from .env file in root directory.\n*/ // Import OpenAI library.\n\n// Class initializes OpenAI model and passes in desired prompt.\nclass OpenAITutor {\n    // Passed arguments form prompt for API call. Returns response as string.\n    async generateResponse(systemMessage, content, query) {\n        try {\n            // Prompt structure using passed arguments.\n            const messages = [\n                {\n                    role: \"system\",\n                    content: systemMessage\n                },\n                {\n                    role: \"user\",\n                    content: content\n                },\n                {\n                    role: \"user\",\n                    content: query\n                }\n            ];\n            // Call on the API, passing the prompt and model and awaits response.\n            const response = await this.openai.chat.completions.create({\n                model: this.model,\n                messages: messages\n            });\n            // Returns OpenAI's answer.\n            // [0] indicates the first version of OpenAI's answer.\n            // We can return an array of these instead to allow for multiple 'tries'.\n            return response.choices[0].message.content.trim();\n        // Detect and handle errors.\n        } catch (error) {\n            // Need to implement functionality from logger.js.\n            return \"An error occurred: \".concat(error.message);\n        }\n    }\n    // Initializes OpenAI config with key and model settings.\n    constructor(model = \"gpt-4-turbo-preview\"){\n        // Remove This line later. Insert key into \"\"\n        const myApiKey = process.env.OPENAI_API_KEY;\n        // Fetch API key from .env.\n        // ADD BACK THIS LINE BACK IN WHEN WE FIX .env\n        // const apiKey = process.env.OPENAI_API_KEY;\n        // Create instance of OpenAI, passing in API key.\n        this.openai = new openai__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n            apiKey: myApiKey\n        });\n        // Passing in desired model.\n        this.model = model;\n    }\n}\n// Export the OpenAITutor class for ES module usage.\n/* harmony default export */ __webpack_exports__[\"default\"] = (OpenAITutor); // This function is only for testing. REMOVE LATER.\n /*\n(async () => {\n  // Initialize the OpenAITutor object.\n  const tutor = new OpenAITutor();\n  // Define system message, content, and query.\n  const systemMessage = \"You are a knowledgeable and helpful tutor in the given subject.\";\n  const content = \"The content extracted from LLaMA model analysis goes here.\";\n  const query = \"What are the main concepts of this content?\";\n  // Pass model systemMessage, content, and query. Save response.\n  const response = await tutor.generateResponse(systemMessage, content, query);\n  // Output response to terminal.\n  console.log(response);\n})();\n*/  /*\n    Current concern: Fixing process.env.OPENAI_API_KEY \n    It doesn't work for some reason. Need to write in key manually for now.\n    To test: node openaiTutor.js\n\n    Notes: This program is intended to be used by a chatbox.js, flashcard.js, etc.\n    It is stateless so caller function will need to save all queries and answers in a string.\n\n    Future plans:\n<<<<<<< HEAD\n    - Figure out why its sort of slow and how to speed it up.\n    - Better error handling. Using logger.js maybe.\n    - Let caller functions set respinse config variables like temperature, max_tokens, and n (number of completions).\n    - Let caller function set apikey  ---- user uses own api key?\n    - Let caller function set model\n    - set up async queues to manage high traffic\n    - implement caching\n    - use google translate api to enable use with different langauges\n    - post-proccessing of response?\n    - validating responses?\n=======\n    - Figure out why it's slow and how to speed it up.\n    - Better error handling using logger.js maybe.\n    - Let caller functions set response config variables like temperature, max_tokens, and n (number of completions).\n    - Let caller function set API key.\n    - Let caller function set model.\n    - Set up async queues to manage high traffic.\n    - Implement caching.\n    - Use Google Translate API to enable use with different languages.\n    - Post-processing of response?\n    - Validating responses?\n>>>>>>> 686ef0aa106e4abf22f0a8dbf81a1fd6665cf212\n*/ \n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = __webpack_module__.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                __webpack_module__.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                __webpack_module__.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        __webpack_module__.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    __webpack_module__.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9vcGVuYWlUdXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsOENBQThDO0FBQ2xCO0FBQzVCQSwwQ0FBYSxDQUFDO0lBQUVFLE1BQU07QUFBVTtBQUVoQzs7Ozs7O0FBTUEsR0FDQSx5QkFBeUI7QUFDRztBQUU1QiwrREFBK0Q7QUFDL0QsTUFBTUU7SUFpQkoseUVBQXlFO0lBQ3pFLE1BQU1DLGlCQUFpQkMsYUFBYSxFQUFFQyxPQUFPLEVBQUVDLEtBQUssRUFBRTtRQUNwRCxJQUFJO1lBQ0YsMkNBQTJDO1lBQzNDLE1BQU1DLFdBQVc7Z0JBQ2Y7b0JBQUVDLE1BQU07b0JBQVVILFNBQVNEO2dCQUFjO2dCQUN6QztvQkFBRUksTUFBTTtvQkFBUUgsU0FBU0E7Z0JBQVE7Z0JBQ2pDO29CQUFFRyxNQUFNO29CQUFRSCxTQUFTQztnQkFBTTthQUNoQztZQUNELHFFQUFxRTtZQUNyRSxNQUFNRyxXQUFXLE1BQU0sSUFBSSxDQUFDQyxNQUFNLENBQUNDLElBQUksQ0FBQ0MsV0FBVyxDQUFDQyxNQUFNLENBQUM7Z0JBQ3pEQyxPQUFPLElBQUksQ0FBQ0EsS0FBSztnQkFDakJQLFVBQVVBO1lBQ1o7WUFDQSwyQkFBMkI7WUFDM0Isc0RBQXNEO1lBQ3RELHlFQUF5RTtZQUN6RSxPQUFPRSxTQUFTTSxPQUFPLENBQUMsRUFBRSxDQUFDQyxPQUFPLENBQUNYLE9BQU8sQ0FBQ1ksSUFBSTtRQUNqRCw0QkFBNEI7UUFDNUIsRUFBRSxPQUFPQyxPQUFPO1lBQ2Qsa0RBQWtEO1lBQ2xELE9BQU8sc0JBQW9DLE9BQWRBLE1BQU1GLE9BQU87UUFDNUM7SUFDRjtJQXZDQSx5REFBeUQ7SUFDekRHLFlBQVlMLFFBQVEscUJBQXFCLENBQUU7UUFFekMsNkNBQTZDO1FBQzdDLE1BQU1NLFdBQVdDLE9BQU9BLENBQUNDLEdBQUcsQ0FBQ0MsY0FBYztRQUUzQywyQkFBMkI7UUFDM0IsOENBQThDO1FBQzlDLDZDQUE2QztRQUU3QyxpREFBaUQ7UUFDakQsSUFBSSxDQUFDYixNQUFNLEdBQUcsSUFBSVQsOENBQU1BLENBQUM7WUFBRXVCLFFBQVFKO1FBQVM7UUFDNUMsNEJBQTRCO1FBQzVCLElBQUksQ0FBQ04sS0FBSyxHQUFHQTtJQUNmO0FBMEJGO0FBRUEsb0RBQW9EO0FBQ3BELCtEQUFlWixXQUFXQSxFQUFDLENBRTNCLG1EQUFtRDtDQUNuRDs7Ozs7Ozs7Ozs7OztBQWFBLElBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0NBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9vcGVuYWlUdXRvci5qcz9jNWViIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydCBlbnZpcm9ubWVudCB2YXJpYWJsZXMgZnJvbSAuZW52IGZpbGVcbmltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52JztcbmRvdGVudi5jb25maWcoeyBwYXRoOiAnLi4vLmVudicgfSk7XG5cbi8qXG4gTmFtZTogb3BlbmFpVHV0b3IuanNcbiBEZXNjcmlwdGlvbjogVGhpcyBwcm9ncmFtIHNldHMgdXAgYW4gT3BlbkFJIGNsaWVudC5cbiBDYW4gYmUgdXNlZCBieSBwYXNzaW5nIGluIHN5c3RlbU1lc3NhZ2UsIGNvbnRlbnQsIGFuZCBxdWVyeSBhcyBzdHJpbmcgYXJndW1lbnRzLlxuIFJldHVybnMgT3BlbkFJJ3MgYW5zd2VyLlxuIFVzZXMgT3BlbkFJIGtleSBmcm9tIC5lbnYgZmlsZSBpbiByb290IGRpcmVjdG9yeS5cbiovXG4vLyBJbXBvcnQgT3BlbkFJIGxpYnJhcnkuXG5pbXBvcnQgT3BlbkFJIGZyb20gJ29wZW5haSc7XG5cbi8vIENsYXNzIGluaXRpYWxpemVzIE9wZW5BSSBtb2RlbCBhbmQgcGFzc2VzIGluIGRlc2lyZWQgcHJvbXB0LlxuY2xhc3MgT3BlbkFJVHV0b3Ige1xuICAvLyBJbml0aWFsaXplcyBPcGVuQUkgY29uZmlnIHdpdGgga2V5IGFuZCBtb2RlbCBzZXR0aW5ncy5cbiAgY29uc3RydWN0b3IobW9kZWwgPSBcImdwdC00LXR1cmJvLXByZXZpZXdcIikge1xuXG4gICAgLy8gUmVtb3ZlIFRoaXMgbGluZSBsYXRlci4gSW5zZXJ0IGtleSBpbnRvIFwiXCJcbiAgICBjb25zdCBteUFwaUtleSA9IHByb2Nlc3MuZW52Lk9QRU5BSV9BUElfS0VZXG4gICAgXG4gICAgLy8gRmV0Y2ggQVBJIGtleSBmcm9tIC5lbnYuXG4gICAgLy8gQUREIEJBQ0sgVEhJUyBMSU5FIEJBQ0sgSU4gV0hFTiBXRSBGSVggLmVudlxuICAgIC8vIGNvbnN0IGFwaUtleSA9IHByb2Nlc3MuZW52Lk9QRU5BSV9BUElfS0VZO1xuXG4gICAgLy8gQ3JlYXRlIGluc3RhbmNlIG9mIE9wZW5BSSwgcGFzc2luZyBpbiBBUEkga2V5LlxuICAgIHRoaXMub3BlbmFpID0gbmV3IE9wZW5BSSh7IGFwaUtleTogbXlBcGlLZXkgfSk7XG4gICAgLy8gUGFzc2luZyBpbiBkZXNpcmVkIG1vZGVsLlxuICAgIHRoaXMubW9kZWwgPSBtb2RlbDtcbiAgfVxuXG4gIC8vIFBhc3NlZCBhcmd1bWVudHMgZm9ybSBwcm9tcHQgZm9yIEFQSSBjYWxsLiBSZXR1cm5zIHJlc3BvbnNlIGFzIHN0cmluZy5cbiAgYXN5bmMgZ2VuZXJhdGVSZXNwb25zZShzeXN0ZW1NZXNzYWdlLCBjb250ZW50LCBxdWVyeSkge1xuICAgIHRyeSB7XG4gICAgICAvLyBQcm9tcHQgc3RydWN0dXJlIHVzaW5nIHBhc3NlZCBhcmd1bWVudHMuXG4gICAgICBjb25zdCBtZXNzYWdlcyA9IFtcbiAgICAgICAgeyByb2xlOiBcInN5c3RlbVwiLCBjb250ZW50OiBzeXN0ZW1NZXNzYWdlIH0sXG4gICAgICAgIHsgcm9sZTogXCJ1c2VyXCIsIGNvbnRlbnQ6IGNvbnRlbnQgfSxcbiAgICAgICAgeyByb2xlOiBcInVzZXJcIiwgY29udGVudDogcXVlcnkgfVxuICAgICAgXTtcbiAgICAgIC8vIENhbGwgb24gdGhlIEFQSSwgcGFzc2luZyB0aGUgcHJvbXB0IGFuZCBtb2RlbCBhbmQgYXdhaXRzIHJlc3BvbnNlLlxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLm9wZW5haS5jaGF0LmNvbXBsZXRpb25zLmNyZWF0ZSh7XG4gICAgICAgIG1vZGVsOiB0aGlzLm1vZGVsLFxuICAgICAgICBtZXNzYWdlczogbWVzc2FnZXNcbiAgICAgIH0pO1xuICAgICAgLy8gUmV0dXJucyBPcGVuQUkncyBhbnN3ZXIuXG4gICAgICAvLyBbMF0gaW5kaWNhdGVzIHRoZSBmaXJzdCB2ZXJzaW9uIG9mIE9wZW5BSSdzIGFuc3dlci5cbiAgICAgIC8vIFdlIGNhbiByZXR1cm4gYW4gYXJyYXkgb2YgdGhlc2UgaW5zdGVhZCB0byBhbGxvdyBmb3IgbXVsdGlwbGUgJ3RyaWVzJy5cbiAgICAgIHJldHVybiByZXNwb25zZS5jaG9pY2VzWzBdLm1lc3NhZ2UuY29udGVudC50cmltKCk7XG4gICAgLy8gRGV0ZWN0IGFuZCBoYW5kbGUgZXJyb3JzLlxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAvLyBOZWVkIHRvIGltcGxlbWVudCBmdW5jdGlvbmFsaXR5IGZyb20gbG9nZ2VyLmpzLlxuICAgICAgcmV0dXJuIGBBbiBlcnJvciBvY2N1cnJlZDogJHtlcnJvci5tZXNzYWdlfWA7XG4gICAgfVxuICB9XG59XG5cbi8vIEV4cG9ydCB0aGUgT3BlbkFJVHV0b3IgY2xhc3MgZm9yIEVTIG1vZHVsZSB1c2FnZS5cbmV4cG9ydCBkZWZhdWx0IE9wZW5BSVR1dG9yO1xuXG4vLyBUaGlzIGZ1bmN0aW9uIGlzIG9ubHkgZm9yIHRlc3RpbmcuIFJFTU9WRSBMQVRFUi5cbi8qXG4oYXN5bmMgKCkgPT4ge1xuICAvLyBJbml0aWFsaXplIHRoZSBPcGVuQUlUdXRvciBvYmplY3QuXG4gIGNvbnN0IHR1dG9yID0gbmV3IE9wZW5BSVR1dG9yKCk7XG4gIC8vIERlZmluZSBzeXN0ZW0gbWVzc2FnZSwgY29udGVudCwgYW5kIHF1ZXJ5LlxuICBjb25zdCBzeXN0ZW1NZXNzYWdlID0gXCJZb3UgYXJlIGEga25vd2xlZGdlYWJsZSBhbmQgaGVscGZ1bCB0dXRvciBpbiB0aGUgZ2l2ZW4gc3ViamVjdC5cIjtcbiAgY29uc3QgY29udGVudCA9IFwiVGhlIGNvbnRlbnQgZXh0cmFjdGVkIGZyb20gTExhTUEgbW9kZWwgYW5hbHlzaXMgZ29lcyBoZXJlLlwiO1xuICBjb25zdCBxdWVyeSA9IFwiV2hhdCBhcmUgdGhlIG1haW4gY29uY2VwdHMgb2YgdGhpcyBjb250ZW50P1wiO1xuICAvLyBQYXNzIG1vZGVsIHN5c3RlbU1lc3NhZ2UsIGNvbnRlbnQsIGFuZCBxdWVyeS4gU2F2ZSByZXNwb25zZS5cbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0dXRvci5nZW5lcmF0ZVJlc3BvbnNlKHN5c3RlbU1lc3NhZ2UsIGNvbnRlbnQsIHF1ZXJ5KTtcbiAgLy8gT3V0cHV0IHJlc3BvbnNlIHRvIHRlcm1pbmFsLlxuICBjb25zb2xlLmxvZyhyZXNwb25zZSk7XG59KSgpO1xuKi9cblxuXG4vKlxuICAgIEN1cnJlbnQgY29uY2VybjogRml4aW5nIHByb2Nlc3MuZW52Lk9QRU5BSV9BUElfS0VZIFxuICAgIEl0IGRvZXNuJ3Qgd29yayBmb3Igc29tZSByZWFzb24uIE5lZWQgdG8gd3JpdGUgaW4ga2V5IG1hbnVhbGx5IGZvciBub3cuXG4gICAgVG8gdGVzdDogbm9kZSBvcGVuYWlUdXRvci5qc1xuXG4gICAgTm90ZXM6IFRoaXMgcHJvZ3JhbSBpcyBpbnRlbmRlZCB0byBiZSB1c2VkIGJ5IGEgY2hhdGJveC5qcywgZmxhc2hjYXJkLmpzLCBldGMuXG4gICAgSXQgaXMgc3RhdGVsZXNzIHNvIGNhbGxlciBmdW5jdGlvbiB3aWxsIG5lZWQgdG8gc2F2ZSBhbGwgcXVlcmllcyBhbmQgYW5zd2VycyBpbiBhIHN0cmluZy5cblxuICAgIEZ1dHVyZSBwbGFuczpcbjw8PDw8PDwgSEVBRFxuICAgIC0gRmlndXJlIG91dCB3aHkgaXRzIHNvcnQgb2Ygc2xvdyBhbmQgaG93IHRvIHNwZWVkIGl0IHVwLlxuICAgIC0gQmV0dGVyIGVycm9yIGhhbmRsaW5nLiBVc2luZyBsb2dnZXIuanMgbWF5YmUuXG4gICAgLSBMZXQgY2FsbGVyIGZ1bmN0aW9ucyBzZXQgcmVzcGluc2UgY29uZmlnIHZhcmlhYmxlcyBsaWtlIHRlbXBlcmF0dXJlLCBtYXhfdG9rZW5zLCBhbmQgbiAobnVtYmVyIG9mIGNvbXBsZXRpb25zKS5cbiAgICAtIExldCBjYWxsZXIgZnVuY3Rpb24gc2V0IGFwaWtleSAgLS0tLSB1c2VyIHVzZXMgb3duIGFwaSBrZXk/XG4gICAgLSBMZXQgY2FsbGVyIGZ1bmN0aW9uIHNldCBtb2RlbFxuICAgIC0gc2V0IHVwIGFzeW5jIHF1ZXVlcyB0byBtYW5hZ2UgaGlnaCB0cmFmZmljXG4gICAgLSBpbXBsZW1lbnQgY2FjaGluZ1xuICAgIC0gdXNlIGdvb2dsZSB0cmFuc2xhdGUgYXBpIHRvIGVuYWJsZSB1c2Ugd2l0aCBkaWZmZXJlbnQgbGFuZ2F1Z2VzXG4gICAgLSBwb3N0LXByb2NjZXNzaW5nIG9mIHJlc3BvbnNlP1xuICAgIC0gdmFsaWRhdGluZyByZXNwb25zZXM/XG49PT09PT09XG4gICAgLSBGaWd1cmUgb3V0IHdoeSBpdCdzIHNsb3cgYW5kIGhvdyB0byBzcGVlZCBpdCB1cC5cbiAgICAtIEJldHRlciBlcnJvciBoYW5kbGluZyB1c2luZyBsb2dnZXIuanMgbWF5YmUuXG4gICAgLSBMZXQgY2FsbGVyIGZ1bmN0aW9ucyBzZXQgcmVzcG9uc2UgY29uZmlnIHZhcmlhYmxlcyBsaWtlIHRlbXBlcmF0dXJlLCBtYXhfdG9rZW5zLCBhbmQgbiAobnVtYmVyIG9mIGNvbXBsZXRpb25zKS5cbiAgICAtIExldCBjYWxsZXIgZnVuY3Rpb24gc2V0IEFQSSBrZXkuXG4gICAgLSBMZXQgY2FsbGVyIGZ1bmN0aW9uIHNldCBtb2RlbC5cbiAgICAtIFNldCB1cCBhc3luYyBxdWV1ZXMgdG8gbWFuYWdlIGhpZ2ggdHJhZmZpYy5cbiAgICAtIEltcGxlbWVudCBjYWNoaW5nLlxuICAgIC0gVXNlIEdvb2dsZSBUcmFuc2xhdGUgQVBJIHRvIGVuYWJsZSB1c2Ugd2l0aCBkaWZmZXJlbnQgbGFuZ3VhZ2VzLlxuICAgIC0gUG9zdC1wcm9jZXNzaW5nIG9mIHJlc3BvbnNlP1xuICAgIC0gVmFsaWRhdGluZyByZXNwb25zZXM/XG4+Pj4+Pj4+IDY4NmVmMGFhMTA2ZTRhYmYyMmYwYThkYmY4MWExZmQ2NjY1Y2YyMTJcbiovIl0sIm5hbWVzIjpbImRvdGVudiIsImNvbmZpZyIsInBhdGgiLCJPcGVuQUkiLCJPcGVuQUlUdXRvciIsImdlbmVyYXRlUmVzcG9uc2UiLCJzeXN0ZW1NZXNzYWdlIiwiY29udGVudCIsInF1ZXJ5IiwibWVzc2FnZXMiLCJyb2xlIiwicmVzcG9uc2UiLCJvcGVuYWkiLCJjaGF0IiwiY29tcGxldGlvbnMiLCJjcmVhdGUiLCJtb2RlbCIsImNob2ljZXMiLCJtZXNzYWdlIiwidHJpbSIsImVycm9yIiwiY29uc3RydWN0b3IiLCJteUFwaUtleSIsInByb2Nlc3MiLCJlbnYiLCJPUEVOQUlfQVBJX0tFWSIsImFwaUtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/openaiTutor.js\n"));

/***/ })

});